// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int                   @id @default(autoincrement())
  clerkId         String                @unique  
  email           String                
  image_url       String
  name            String
  dietary_pref    Dietary_Preferences[]
  allergies       String[]
  goals           Goals[]
  role            String
  recommendations Recommendation[]
  caloric_goal    Int                   @default(2000)
  daysOfWeek      String[]
}

model Goals {
  id          Int    @id @default(autoincrement())
  title       String @unique
  description String
  category    String
  User        User?  @relation(fields: [userId], references: [id])
  userId      Int?
}

model Dietary_Preferences {
  id           Int      @id @default(autoincrement())
  name         String   @unique
  isGlutenFree Boolean?
  isLactoseInt Boolean?
  isVegan      Boolean?
  isVegetarian Boolean?
  isKeto       Boolean?
  User         User?    @relation(fields: [userId], references: [id])
  userId       Int?
  Snacks       Snacks?  @relation(fields: [snacksId], references: [id])
  snacksId     Int?
  Meals        Meals?   @relation(fields: [mealsId], references: [id])
  mealsId      Int?
}

model Snacks {
  id                  Int                       @id @default(autoincrement())
  name                String
  image_url           String?
  description         String
  wellness_category   String[]
  dietary_preferences Dietary_Preferences[]
  nutritional_info    Nutritional_Information[]
}

model Meals {
  id                      Int                       @id @default(autoincrement())
  name                    String
  image_url               String?
  price                   Float
  nutritional_information Nutritional_Information[]
  dietary_preferences     Dietary_Preferences[]
  restaurant_name         String
  is_AI                   Boolean?
  Recommendation          Recommendation[]
}

model Nutritional_Information {
  id           Int     @id @default(autoincrement())
  serving_size Int?
  calories     Int?
  total_fat    Int?
  cholesterol  Int?
  sodium       Int?
  total_carbs  Int?
  protein      Int?
  sugars       Int?
  Snacks       Snacks? @relation(fields: [snacksId], references: [id])
  snacksId     Int?
  Meals        Meals?  @relation(fields: [mealsId], references: [id])
  mealsId      Int?
}

model Recommendation {
  id     Int     @id @default(autoincrement())
  type   String?
  user   User    @relation(fields: [UserId], references: [id])
  UserId Int
  meal   Meals   @relation(fields: [mealId], references: [id])
  mealId Int
  status String?
}

model Benefits {
  id           Int    @id @default(autoincrement())
  title        String
  description  String
  category     String
  availabe_for String
}
